BRANCH: master
https://github.com/mimelator/apv


Approval process could be:
	Update a record in the db approved=true Test
	DatabaseReference ref = database.getReference("liveStream/command"); Test
		

	
Alpha-One:
	Scheduling of set packs
	Social Media badges that guest Djs can use (snapchat, instagram, facebook)
		https://blog.hubspot.com/blog/tabid/6307/bid/29544/the-ultimate-cheat-sheet-for-creating-social-media-buttons.aspx
		https://developers.facebook.com/docs/plugins/share-button	
	

*****************************************************************************
LOCAL DEVELOPMENT
Start node local
cd git\wl	
edit .env
npm run devstart
	
Start mongo
~/mongod.sh default
*****************************************************************************	
Project Timeline:
New Job = June 18th? (or 25)
 NJ - 7 days: Go Live June 11
 NJ - 14 days: 12 hour stream June 4
 NJ - 21 days: 1 hour stream w/database setpacks entered by at least one person other than me May 28th
*****************************************************************************
*****************************************************************************
Current High Score: 

				  122435, 	1.039196, 	32:43:37	(May 28, 2018)	APV Version: 0.3.3-SNAPSHOT
					8743, 	0.742379, 	03:16:17	(May 26, 2018) 	APV Version: 0.3.1-SNAPSHOT
					8041, 	1.633685 	01:22:02  	(Apr 29, 2018)
					8298,	0.878374,	02:37:27	(May 26, 2018) 	APV Version: 0.3.1-SNAPSHOT STREAMING
					7507, 	1.147859,	01:49:00  	(May 26, 2018) 	APV Version: 0.3.1-SNAPSHOT
					5513, 	1.730383, 	00:53:06 	(May 25, 2018) 	APV Version: 0.3.1-SNAPSHOT
					1627, 	0.149431 	03:01:28  	(May  8, 2018)
*****************************************************************************
*****************************************************************************
TODO:
* Scheduled Maintenance: clean the icons and storage of firebase and processed
* Email Subscriptions to a specifc setpack
	Every time the setpack starts any subscriber gets an email notification
	anyone subscribed gets notified
	subscriptions should happen during the twitch chat window
* Importer.  Create a script that generates the appropriate import.json file
* SetListComplete Agent that Special create a random mixed setpack on the fly and play that with a few songs
* Tree scene?  Puzzle animation of a background iamge
* Window blinds background
* Soundcloud play list
* Napster play list
* add a blur to the edge of an image: https://www.imagemagick.org/Usage/blur/#blur ?
* All backgrounds should be able to rotate around the center of the screen (slowly is fine)
* Render vector graphics
* Shrink the 3d blocks to be smaller than the projected screen.  It's cool
* A laminated command sheet
* Ability to fire any of the events
* Another animation: 
	These are for transitions where the song name isn't known
	Such as a hindu goddess with many limbs
	This will be a nice task where i can use a different set of sketches that don't perform quite as well
* Configuration GUI (tree) for each APVSystem that would allow you to disable/enable plugins for your set
* Document Commands (for creating Macros and Hot Keys and Agents)
	* Add documentation in reference.conf to each plugin to describe it's arguments
* Use ShaderDemo2 to start rendering images with glsl
* Machine learning: An ability to record how many likes for any given scene while streaming.  Feed this data to a machine learning model
** The training data going into the model would be encoded information describing all of the current scene components
*****************************************************************************
*****************************************************************************
Issues:
APVSetListPlayer doesn't pick up the the setList folder of the setPack if it was specified on the commandline
WL: When creating a new setpack, the select picker for images doesn't show the images in Safari.
When refreshing the application, make sure you have the latest and greatest (reference.conf) in memory first.
*****************************************************************************
*****************************************************************************
Remote Debugging:
java -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=y -Dconfig.file=test34/application.conf -jar apv.jar
*****************************************************************************			
*****************************************************************************
Build & Release to local artifactory and github
mvn package
mvn release:clean release:prepare release:perform
*****************************************************************************
*****************************************************************************
MONGO SHELL
sp = db.setpacks;
sp.updateMany({}, { $set:{ folder:""  } });
	
//find first
var res = djs.findOne();

//give all the setpacks to the first dj
var spIds = [];
var myCursor = db.setpacks.find();
while (myCursor.hasNext()) {
  var obj = myCursor.next();
  print(obj._id);
  spIds.push(obj._id);
}
db.djs.updateOne(
	{},
	{ $set: { "setpack" : spIds } }
);

//delete
find by id:
 db.songs.find(ObjectId("5b04945dfe01707121b83fb6"));
 db.songs.deleteOne({"_id":ObjectId("5b04945dfe01707121b83fb6")});
 
//add a song to a setpack
db.setpacks.updateOne(
	{"_id": ObjectId("5b04948dfe01707121b83fb7")}, 
 	{ $addToSet: { "song": ObjectId("5b04e616e5f46c7aad888c25") } }
);


db.setpacks.update(
  {name: 'AlphaTwo'}, 
  {$pull: { song: ObjectId("5b04945dfe01707121b83fb6")}});
*****************************************************************************	
*****************************************************************************
DOCKER COMMANDS NOTES

MONGO:
#start an instance of mongo pointing at your database	
sudo docker run -d -p 27017:27017 -v ~/db-bak:/data/db mongo	
	
#start an instance that is exposed as port 37017	
sudo docker run -d -p 37017:27017 -v ~/db-bak:/data/db mongo

#connect to it	
mongodb://localhost:37017/test	
	
#name an instance
sudo docker run -d -p 27017:27017 -v ~/db-bak:/data/db --name="arranger-mongo" mongo 	
	
#build the image (in the wl directory)
docker build -t mimel/wl .	

#run an instance of it
docker run -p 49160:3000 -d mimel/wl

//connect to an instance of docker
docker exec -it wavelength-arranger /bin/bash

#one stop importing
docker exec wavelength-testDB4 ./shell/importFromFirebase.sh 
*****************************************************************************
*****************************************************************************
Setup a softlink inside of public to the apv directory:
cd git/wl/public
ln -s ~/apv apv
*****************************************************************************
*****************************************************************************
How to override the DefaultCommands.
-DdefaultCommands.0
-DdefaultCommands.0=DB_CREATE_SET_PACK_FOLDERS
-DdefaultCommands.1=CYCLE_SET_PACK
see apv-no-db.sh for example			
*****************************************************************************		
