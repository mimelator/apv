BRANCH: master
https://github.com/mimelator/apv

Production Tasks:

	fix firebase login problem on production
		This was due to docker clock drift
		
	Add start commands to turn down audio and change pulse skip and cycle_set_pack
	
	Change the frequency of some of those backdrops/shaders/backgrounds that i don't like	

	PULSE_SKIP_INC isn't working as advertised
		only getting one at a time
	
	Live Stats:
		Capture ms since last frame
		every 100 store current 'rolling' avg to larger collection
		every 1000
		every 10000
		
		
		Command to show a sepcific setting as a watermark
		Firebase response should be #completed or #error-msg
	

Development Tasks:

	

	Schduling:
		Can i query for the status/availability of the next 48 slots?
			Calculate an array of the next 48 entries.
			Query each in order.
			Find out if they exist and if so, what's their status
			
			Each result object should include the ScheduleDocument
			
		
		Can i populate a drop down box that has only certain items available?
		Can i find the record with the next upcoming slot?
			Can i send the email and update that record?  (eg.  NotificationSent=true)


	https://momentjs.com/
	https://stackoverflow.com/questions/24538345/get-times-in-15-minute-increments-up-to-a-specific-time
	http://jsfiddle.net/9u3QD/1/

	Notes:	
	I think the queries would be by the timestamp, and the other fields would be:
		(pretty time for my sanity sake)
		reservation status: Pending|Reserved

	[WEB] SCHEDULING:
		i want to show all the available 30 minute sections in the next 24 hours
		
			Alpha-One must be able to access the next 48 30 minute records.
			For all of the records that available, allow that time slot to be picked from a drop-down list.
				If there are no slots available, then i don't think you can create a set pack
			When a record is created for the set pack, it's time slot is set to pending	
				
		Once a set-pack is approved, instead of playing it right away (via the commands of standard-import-hotcommand)
			an appropriate record is modified in the firebase.  (state changed from 'Pending' to 'Reserved') 		
			If i update an approved status to 'rejected' then i'll need to clear out the associated timeslot
			
		Once a setpack is approved, the DJ should have the option to recieve:
			E-Mail 
			
			and share via
				Facebook
				Instagram
				Snapchat

	/git/wl/app.js
	if (process.env.FIREBASE === 'true') {
		...
		require('./util/auto-setpack-player').followFirebaseSchedule();
	}
	This daemon would wake up every 30 seconds
		find the nearest (<14 minutes either way >14) to see if any of the calculated timestamps have a reserved status
		If so, notifiy the subscriber (according to options) and change the notification status
		
		if (within 1 minute either way)
		If so, update the document to say 'starting:<setpack>'
			Then update the remote command file with PLAY_SET_PACK:<setpack-name>


	[WEB] 2 minutes after the new set pack starts, draw a help message regarding the like commands:	
		Must listen to a set-pack change()
		Then, two minutes later (via setTimeout)
			!likeAll or !likeSong or !likeSetPack or !likeDj


	[WEB] LIKES:
		WL would listen for chat messages: !likeAll or !likeSong or !likeSetPack or !likeDj
			If heard, it would write a new document to Mongo
			Each document would have current (accurate or not):
				Song, Setpack, Dj, timestamp, twitchId
			
		Queries would need to be:
			Top N collections of Songs
			Top N collections of Setpacks
			Top N collections of Djs
				
				
		Those queries could be executed every 10 minutes.
			Each result would be placed into firebase
			!leaderboard would be able to say this result on twitch-bot
				
	
	Likes:
		* Have stats available in the chat: !leaderboard
		* Create a scene that shows the stats
		
		* How to prevent spam:
			Usage: /r9kbeta
		* How to prevent excessive voting?  Hmm..
			https://docs.nightbot.tv/commands/filters  Nightbot filter repetitions
	

*****************************************************************************
TODO:


[WEB] * Scheduling
[WEB] * Social Media badges that guest Djs can use (snapchat, instagram, facebook)
[WEB] * Subscriptions for setpacks/djs/etc...
[WEB] * Execute certain mod commands over chat window?
[WEB] * A laminated command sheet
[WEB] * Scheduled Maintenance: clean the icons and storage of firebase and processed
[WEB] * Machine learning: An ability to record how many likes for any given scene while streaming.  Feed this data to a machine learning model
			The training data going into the model would be encoded information describing all of the current scene components


[GE] * Modulate the Shaders.  For instance the zoom blur... slowly blur in then 'blur' out
[GE] * Have a set pack transition animation (The tree with a marquee message of the SetPack name)
[GE] * Agent that Special create a random mixed setpack on the fly and play that with a few songs
[GE] * Tree scene?  Puzzle animation of a background iamge
[GE] * Animations: Such as a hindu goddess with many limbs
[GE] * Window blinds background
[GE] * More shaders here: https://github.com/maierfelix/rokon/tree/master/shaders
[GE] * Use ShaderDemo2 to start rendering images with glsl
[GE] * add a blur to the edge of an image: https://www.imagemagick.org/Usage/blur/#blur ?
[GE] * All backgrounds should be able to rotate around the center of the screen (slowly is fine)
[GE] * Render vector graphics
[GE] * Shrink the 3d blocks to be smaller than the projected screen.  It's cool

[*] * I might want a runtime method to disable agents, but for right now i'll do it manually
[*] * Download music from different sources: Soundcloud(on-hold) Spotify?  Pandora?  Napster?
{*] * Imagine allowing DJs to add scripts to their setpacks: (Basically create custom agents for their setpacks)
			Every 5 mintues fire this event: WATERMARK
*****************************************************************************
*****************************************************************************
Issues:
APVSetListPlayer doesn't pick up the the setList folder of the setPack if it was specified on the commandline (This is a feature)
When refreshing the application, make sure you have the latest and greatest (reference.conf) in memory first.
Import/Export is just a simple folder move, but there is no DB support :) but needs an update to the application.conf for the ocean
[WL]: wavelength-monday | GET /apv/playlist/80S_EARLY_90S_NEW_WAVE_POST_PUNK_GOTHIC_DARKWAVE.mp3 404 113.484 ms - 3189
	I deleted all of the songs under monday/playlist to conserve rooom when
	transferring a zip archive to my dev laptop
	However, the song of each song Model points not to to the SetPack but to the location in playlist
	So right now, all monday songs are broken from the DB.  Not the setpacks...
	FIX: Maybe also show all the possible set pack locations.  Just like searching for djs, try to search
		for setpacks that contain this song.
[*] : The difference in experience between the unlimited/unregistered setpacks vs official setpacks?	
		Should i add additional default icons/colors/messages?
*****************************************************************************
*****************************************************************************
Remote Debugging:
java -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=y -Dconfig.file=test34/application.conf -jar apv.jar
*****************************************************************************			
*****************************************************************************
Build & Release to local artifactory and github
mvn package
mvn release:clean release:prepare release:perform
*****************************************************************************
*****************************************************************************
MONGO SHELL
sp = db.setpacks;
sp.updateMany({}, { $set:{ folder:""  } });
	
//find first
var res = djs.findOne();

//give all the setpacks to the first dj
var spIds = [];
var myCursor = db.setpacks.find();
while (myCursor.hasNext()) {
  var obj = myCursor.next();
  print(obj._id);
  spIds.push(obj._id);
}
db.djs.updateOne(
	{},
	{ $set: { "setpack" : spIds } }
);

//delete
find by id:
 db.songs.find(ObjectId("5b04945dfe01707121b83fb6"));
 db.songs.deleteOne({"_id":ObjectId("5b04945dfe01707121b83fb6")});
 
//add a song to a setpack
db.setpacks.updateOne(
	{"_id": ObjectId("5b04948dfe01707121b83fb7")}, 
 	{ $addToSet: { "song": ObjectId("5b04e616e5f46c7aad888c25") } }
);


db.setpacks.update(
  {name: 'AlphaTwo'}, 
  {$pull: { song: ObjectId("5b04945dfe01707121b83fb6")}});
*****************************************************************************	
*****************************************************************************
DOCKER COMMANDS NOTES

MONGO:
#start an instance of mongo pointing at your database	
sudo docker run -d -p 27017:27017 -v ~/db-bak:/data/db mongo	
	
#start an instance that is exposed as port 37017	
sudo docker run -d -p 37017:27017 -v ~/db-bak:/data/db mongo

#connect to it	
mongodb://localhost:37017/test	
	
#name an instance
sudo docker run -d -p 27017:27017 -v ~/db-bak:/data/db --name="arranger-mongo" mongo 	
	
#build the image (in the wl directory)
docker build -t mimel/wl .	

#run an instance of it
docker run -p 49160:3000 -d mimel/wl

//connect to an instance of docker
docker exec -it wavelength-arranger /bin/bash

#one stop importing
docker exec wavelength-testDB4 ./shell/importFromFirebase.sh 
*****************************************************************************
*****************************************************************************
Setup a softlink inside of public to the apv directory:
cd git/wl/public
ln -s ~/apv apv
*****************************************************************************
*****************************************************************************
How to override the DefaultCommands.
-DdefaultCommands.0
-DdefaultCommands.0=DB_CREATE_SET_PACK_FOLDERS
-DdefaultCommands.1=CYCLE_SET_PACK
see apv-no-db.sh for example			
*****************************************************************************		
*****************************************************************************
LOCAL DEVELOPMENT
Start node local
cd git\wl	
edit .env
npm run devstart
	
Start mongo
~/mongod.sh default
*****************************************************************************
*****************************************************************************
Current High Score: 

  122435, 	1.039196, 	32:43:37	(May 28, 2018)	APV Version: 0.3.3-SNAPSHOT
	8743, 	0.742379, 	03:16:17	(May 26, 2018) 	APV Version: 0.3.1-SNAPSHOT
	8041, 	1.633685 	01:22:02  	(Apr 29, 2018)
	8298,	0.878374,	02:37:27	(May 26, 2018) 	APV Version: 0.3.1-SNAPSHOT STREAMING
	7507, 	1.147859,	01:49:00  	(May 26, 2018) 	APV Version: 0.3.1-SNAPSHOT
	5513, 	1.730383, 	00:53:06 	(May 25, 2018) 	APV Version: 0.3.1-SNAPSHOT
	1627, 	0.149431 	03:01:28  	(May  8, 2018)
*****************************************************************************
