BRANCH: cl-tools
https://github.com/mimelator/apv


Timeline:
Todo:
	Verify:
		SetListComplete Event is fired and the agent cycles the setpack
		
		when i add a new agent or any new thing to the reference.conf
			I need to recompute all of the existing application.conf 
		
		
	Wednesday 22nd: Docker research on mongo db
		Move mongo db to be inside the apv directory
		Each Apv can be in a different user's home folder
	Thursday 23rd: Build Docker Image
	Friday 24th: Buy computer and install Docker


*****************************************************************************
mongo shell
sp = db.setpacks;
sp.updateMany({}, { $set:{ folder:""  } });
	
//find first
var res = djs.findOne();

//give all the setpacks to the first dj
var spIds = [];
var myCursor = db.setpacks.find();
while (myCursor.hasNext()) {
  var obj = myCursor.next();
  print(obj._id);
  spIds.push(obj._id);
}
db.djs.updateOne(
	{},
	{ $set: { "setpack" : spIds } }
);

//delete
find by id:
 db.songs.find(ObjectId("5b04945dfe01707121b83fb6"));
 db.songs.deleteOne({"_id":ObjectId("5b04945dfe01707121b83fb6")});
 
//add a song to a setpack
db.setpacks.updateOne(
	{"_id": ObjectId("5b04948dfe01707121b83fb7")}, 
 	{ $addToSet: { "song": ObjectId("5b04e616e5f46c7aad888c25") } }
);


db.setpacks.update(
  {name: 'AlphaTwo'}, 
  {$pull: { song: ObjectId("5b04945dfe01707121b83fb6")}});


*****************************************************************************	
	
*****************************************************************************	
Dockerize node, mongo, youtube-dl, imagemagick

Use different databases and node instances to keep SetPacks and DJs different
		I can have different categories of DJs and the inventory will be different for each database	

https://semaphoreci.com/community/tutorials/dockerizing-a-node-js-web-application
https://medium.com/statuscode/dockerising-a-node-js-and-mongodb-app-d22047e2806f
https://docs.docker.com/v1.6/examples/nodejs_web_app/
https://docs.docker.com/v1.11/engine/examples/mongodb/
https://nodejs.org/en/docs/guides/nodejs-docker-webapp/
https://buddy.works/guides/how-dockerize-node-application
using apt-get in docker: https://forums.docker.com/t/not-able-to-install-anything-with-apt-get-on-a-docker-container/1595
https://medium.com/@sunnykay/docker-development-workflow-node-express-mongo-4bb3b1f7eb1e
*****************************************************************************		
	
*****************************************************************************	
Project Timeline:
New Job = June 18th? (or 25)
 NJ - 7 days: Go Live June 11
 NJ - 14 days: 12 hour stream June 4
 NJ - 21 days: 1 hour stream w/database setpacks entered by at least one person other than me May 28th
*****************************************************************************
 
*****************************************************************************
Setup a softlink inside of public to the apv directory:
cd git/wl/public
ln -s ~/apv apv
*****************************************************************************

*****************************************************************************
Current High Score: 8041, 1.633685 c/s, 01:22:02  (Apr 29, 2018)
			2nd:    1627, 0.149431 c/s, 03:01:28  (May  8, 2018)
			3rd		1517, 0.412565 c/s, 01:01:17  (May 11, 2018)
*****************************************************************************
*****************************************************************************
TODO:
* SetListComplete Agent that Special create a random mixed setpack on the fly and play that with a few songs
* Tree scene?  Puzzle animation of a background iamge
* Window blinds background
* add a blur to the edge of an image: https://www.imagemagick.org/Usage/blur/#blur ?
* All backgrounds should be able to rotate around the center of the screen (slowly is fine)
* Render vector graphics
* Shrink the 3d blocks to be smaller than the projected screen.  It's cool
* A laminated command sheet
* Ability to fire any of the events
* Another animation: 
	These are for transitions where the song name isn't known
	Such as a hindu goddess with many limbs
	This will be a nice task where i can use a different set of sketches that don't perform quite as well
* Configuration GUI (tree) for each APVSystem that would allow you to disable/enable plugins for your set
* Document Commands (for creating Macros and Hot Keys and Agents)
	* Add documentation in reference.conf to each plugin to describe it's arguments
* Use ShaderDemo2 to start rendering images with glsl
* Machine learning: An ability to record how many likes for any given scene while streaming.  Feed this data to a machine learning model
** The training data going into the model would be encoded information describing all of the current scene components
	
*****************************************************************************
*****************************************************************************
Set Pack Names could be:
	PurpleHaze
	Homecoming
	Aquamarine
	HeavyMetal
	
Messages:
	Can you keep up with me?
	Still there?
	You're doing great.
	That's the way to race...	
*****************************************************************************
*****************************************************************************

Remote Debugging:
java -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=y -Dconfig.file=test34/application.conf -jar apv.jar

Opt Eclipse params:
-Xms1024M -Xmx1024M  -XX:MinHeapFreeRatio=20 -XX:NewRatio=4 

*****************************************************************************			
*****************************************************************************
Build & Release to local artifactory and github
mvn package
mvn release:clean release:prepare release:perform
*****************************************************************************

*****************************************************************************
Issues:
APVSetListPlayer doesn't pick up the the setList folder of the setPack if it was specified on the commandline
WL: When creating a new setpack, the select picker for images doesn't show the images in Safari.
*****************************************************************************
