BRANCH: master
https://github.com/mimelator/apv


Test streaming from mac with different OBS values
	-> Pretty good at 24FPS.  Did have network issues at times
Test launching a new instance with the Snapshot
	-> Done
Test optimizing the stream values on the ami
	-> In Prog
Fix shader loading on Windows


updateForDemo
 randomizeColors


*****************************************************************************
Current High Score: 8041, 1.633685 c/s, 01:22:02  (Apr 29, 2018)
			2nd:    1627, 0.149431 c/s, 03:01:28  (May  8, 2018)
*****************************************************************************
*****************************************************************************
TODO:
* A Command to cycle through all of the Configuration Files (setPacks)
* Machine learning: An ability to record how many likes for any given scene while streaming.  Feed this data to a machine learning model
** The training data going into the model would be encoded information describing all of the current scene components 
* Another animation: 
	These are for transitions where the song name isn't known
	Such as a hindu goddess with many limbs
	This will be a nice task where i can use a different set of sketches that don't perform quite as well
* Create set packs
* Configuration GUI (tree) for each APVSystem that would allow you to disable/enable plugins for your set
* Document Commands (for creating Macros and Hot Keys and Agents)
* Add documentation in reference.conf to each plugin to describe it's arguments
*****************************************************************************
*****************************************************************************

Remote Debugging:
java -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=y -Dconfig.file=test34/application.conf -jar apv.jar


*****************************************************************************			
*****************************************************************************
Build & Release to local artifactory and github
mvn package
mvn release:clean release:prepare release:perform
*****************************************************************************


